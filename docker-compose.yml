version: '3.6'
services:
  telegraf:
    image: telegraf:1.29
    platform: linux/x86_64
    user: root:1000
    volumes:
      - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - influxdb
      - mongo
      - elastic
      - nginx
    links:
      - influxdb
    ports:
      - '127.0.0.1:8125:8125/udp'
    networks:
      - backend

  influxdb:
    image: influxdb:1.8-alpine
    env_file: configuration.env
    ports:
      - '127.0.0.1:8086:8086'
    volumes:
      - ./:/imports
      - ./docker/data/inluxdb_data:/var/lib/influxdb
    networks:
      - backend

  grafana:
    image: grafana/grafana:8.0.2
    depends_on:
      - influxdb
    env_file: configuration.env
    links:
      - influxdb
    ports:
      - '127.0.0.1:4000:3000'
    volumes:
      - ./docker/data/grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
    networks:
      - backend

  nginx:
    image: nginx
#    build:
#      context: docker/config/nginx
    volumes:
      - ./docker/config/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./static:/app
      - ./log/nginx:/var/log/nginx
    working_dir: /etc/nginx/conf.d/
    ports:
      - "8180:8180"
    networks:
      - backend

  mongo:
    image: mongo
    restart: always
    volumes:
      - ./docker/data/mongodb:/data/db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    networks:
      - backend

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.6
    environment:
      - node.name=elastic
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms750m -Xmx750m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./docker/data/elastic:/usr/share/elasticsearch/data
#      - ./docker/config/elastic:/config
    ports:
      - 9200:9200
    networks:
      - backend

#  php-pure-nginx:
#    build:
#      context: docker/php/nginx
#    volumes:
#      - ./php-pure:/app
#      - php-xhprof:/var/xhprof/xhprof-2.3.9
#    ports:
#      - "8181:8181"
#      - "8281:8281"
#      - "8282:8282"
#    networks:
#      - backend
#
#  php-pure-fpm:
#    build:
#      context: docker/php/php-fpm
#    volumes:
#      - ./php-pure:/app
#      - php-xhprof:/var/xhprof/xhprof-2.3.9
#    networks:
#      - backend
#
#volumes:
#  php-xhprof:
#  grafana_data: {}
#  influxdb_data: {}

networks:
  backend:
#    external: true
#    driver: bridge
#    driver_opts:
#      com.docker.network.driver.mtu: 1200